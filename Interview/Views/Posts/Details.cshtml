@model Interview.ViewModels.PostAnswerViewModel

@{
    ViewBag.Title = "Details";
    var postContent = Model.PostContent;
}

<div class="content">
    <div class="row">
        <div class="col-sm-9">
            <div>
                <h4>@Html.DisplayFor(model => model.PostTitle)</h4>
                <p>@Html.Raw(postContent)</p>
                <div class="post-info">
                    <p class="post-createdat">Posted on @Html.DisplayFor(model => model.CreatedAt)</p>
                    <p class="post-username">By @Html.DisplayFor(model => model.User.UserName)</p>
                </div>
                <div class="clearfix"></div>
                <hr />
            </div>
            <div id="answers">
                <div id="answers-content">
                    @foreach (var answer in Model.PostAnswers)
                    {
                        <div>
                            <p>@Html.Raw(answer.CommentContent)</p>
                            <div class="post-info">
                                <p class="post-createdat">Commented on @Html.DisplayFor(model => model.CreatedAt)</p>
                                <p class="post-username">By @Html.DisplayFor(model => model.User.UserName)</p>
                            </div>
                            <div class="clearfix"></div>
                        </div>
                        if (ViewBag.userId == answer.UserID)
                        {
                            <div>
                                <text>
                                    @Html.ActionLink("Edit", "Edit", "Comments", new { id = answer.CommentID }, null) |
                                    @Html.ActionLink("Delete", "Delete", "Comments", new { id = answer.CommentID }, null)
                                </text>
                            </div>
                        }
                        <hr />
                    }
                </div>
            </div>

            <div #id="answers-form">
                @using (Html.BeginForm("AddComment", "Comments", FormMethod.Post))
            {
                    @Html.AntiForgeryToken()

                    <div class="form-horizontal">
                        <div class="form-group">
                            <div class="col-sm-offset-1 col-md-10">
                                @Html.EditorFor(model => model.CommentContent, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.CommentContent, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        @Html.HiddenFor(model => model.PostID)

                        <div class="form-group">
                            <div class="col-sm-offset-1 col-sm-8">
                                <input type="submit" value="Post" class="btn btn-default" />
                            </div>
                        </div>
                    </div>
                }
            </div>

            <p>
                @if (ViewBag.userId == Model.User.Id)
            {
                    <text>@Html.ActionLink("Edit", "Edit", new { id = Model.PostID }) |</text>
                }
                @Html.ActionLink("Back to List", "Index")
            </p>
        </div>
        <div class="col-sm-3">
            <h5>Lastest Posts</h5>
            <hr />
            @Html.Action("LatestPosts", "Posts")
        </div>
    </div>

</div>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/customjs")

    <script>
        CKEDITOR.replace("CommentContent");
    </script>
}




